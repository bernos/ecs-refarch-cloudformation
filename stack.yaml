Description: >

    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with 
    ECS hosts distributed across multiple Availability Zones. 

    Finally, it deploys a pair of example ECS services from containers published in 
    Amazon EC2 Container Registry (Amazon ECR).

    Last Modified: 22nd September 2016
    Author: Paul Maddox <pmaddox@amazon.com>

Parameters:

    VPC:
        Description: Choose which VPC this ECS cluster should be deployed to
        Type: AWS::EC2::VPC::Id

    Subnets:
        Description: Choose which subnets this ECS cluster should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

Resources:

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./infrastructure/security-groups.yaml
            Parameters: 
                EnvironmentName: !Ref AWS::StackName
                VPC: !Ref VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./infrastructure/load-balancers.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !Ref VPC
                Subnets: { "Fn::Join": [",", { "Ref": "Subnets" } ] }
                SecurityGroup:
                  Fn::GetAtt:
                  - SecurityGroups
                  - Outputs.LoadBalancerSecurityGroup

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./infrastructure/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: t2.large
                ClusterSize: 4
                VPC: !Ref VPC
                SecurityGroup:
                  Fn::GetAtt:
                  - SecurityGroups
                  - Outputs.ECSHostSecurityGroup
                Subnets: { "Fn::Join": [",", { "Ref": "Subnets" } ] }

    # ProductService:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./services/product-service/service.yaml
    #         Parameters:
    #             VPC: !Ref VPC
    #             Cluster:
    #               Fn::GetAtt:
    #               - ECS
    #               - Outputs.Cluster
    #             DesiredCount: 2
    #             Listener:
    #               Fn::GetAtt:
    #               - ALB
    #               - Outputs.Listener 
    #             Path: /products

    # WebsiteService:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./services/website-service/service.yaml
    #         Parameters:
    #             VPC: !Ref VPC
    #             Cluster:
    #               Fn::GetAtt:
    #               - ECS
    #               - Outputs.Cluster
    #             DesiredCount: 2
    #             ProductServiceUrl:
    #               Fn::Join:
    #               - "/"
    #               - - Fn::GetAtt:
    #                   - ALB
    #                   - Outputs.LoadBalancerUrl
    #                 - "products"
    #             Listener:
    #               Fn::GetAtt:
    #               - ALB
    #               - Outputs.Listener 
    #             Path: /

# Outputs:

#     ProductServiceUrl: 
#         Description: The URL endpoint for the product service
#         Value:
#           Fn::Join:
#           - "/"
#           - - Fn::GetAtt:
#               - ALB
#               - Outputs.LoadBalancerUrl
#             - "products"

#     WebsiteServiceUrl: 
#         Description: The URL endpoint for the website service
#         Value:
#           Fn::Join:
#           - ""
#           - - Fn::GetAtt:
#               - ALB
#               - Outputs.LoadBalancerUrl
#             - "/"
